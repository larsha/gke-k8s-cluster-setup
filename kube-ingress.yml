apiVersion: v1
kind: Namespace
metadata:
  name: kube-ingress
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config
  namespace: kube-ingress
data:
  hsts-include-subdomains: "false"
  proxy-body-size: 64m
  proxy-connect-timeout: "15"
  proxy-read-timeout: "600"
  proxy-send-timeout: "600"
  proxy_hide_headers: server
  server-name-hash-bucket-size: "256"
  server-tokens: "false"
  service-upstream: "true"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: default-http-backend
  namespace: kube-ingress
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: default-http-backend
    spec:
      restartPolicy: Always
      containers:
      - name: default-http-backend
        image: gcr.io/google_containers/defaultbackend:1.3
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: nginx
  namespace: kube-ingress
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      containers:
      - name: nginx
        image: gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.13
        imagePullPolicy: Always
        args:
          - /nginx-ingress-controller
          - --configmap=$(POD_NAMESPACE)/config
          - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        ports:
        - containerPort: 80
          hostPort: 80
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  name: default-http-backend
  namespace: kube-ingress
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: default-http-backend
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: kube-ingress
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    nodePort: 31154
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    nodePort: 31804
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: nginx
  sessionAffinity: None
